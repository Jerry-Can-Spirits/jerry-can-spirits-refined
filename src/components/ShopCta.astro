---
// src/components/ShopCta.astro
export interface Product {
  href?: string;
  image: string;
  alt: string;
  label: string;
  available?: boolean;
  badge?: string;
}

// Products data - could come from props or CMS
const products: Product[] = [
  {
    href: "/products/rum",
    image: "/product-rum.jpg",
    alt: "Jerry Can Spirits Premium Rum",
    label: "The Rum",
    available: false,
    badge: "Coming Soon"
  },
  {
    image: "/product-coasters.jpg",
    alt: "Jerry Can Spirits Hardware Collection",
    label: "Hardware",
    available: false,
    badge: "Coming Soon"
  },
  {
    image: "/product-merch.jpg",
    alt: "Jerry Can Spirits Uniform Collection",
    label: "The Uniform",
    available: false,
    badge: "Coming Soon"
  }
];
---

<section class="shop-cta" id="shop">
  <div class="container">
    <div class="section-header">
      <span class="section-label">Shop</span>
      <h2 class="section-title">Field-Ready Provisions</h2>
      <p class="section-description">
        Essential gear for the modern adventurer. Premium spirits and field-tested accessories.
      </p>
    </div>
    
    <div class="product-grid">
      {products.map((product, index) => (
        <div class={`product-card ${!product.available ? 'coming-soon' : ''}`}>
          {product.href && product.available ? (
            <a href={product.href} class="product-link">
              <div class="product-image-wrapper">
                <picture>
                  <source 
                    media="(max-width: 768px)" 
                    srcset={product.image.replace('.jpg', '-mobile.jpg')}
                  />
                  <img 
                    src={product.image} 
                    alt={product.alt}
                    loading="lazy"
                    class="product-image"
                  />
                </picture>
                {product.badge && (
                  <span class="product-badge">{product.badge}</span>
                )}
                <div class="product-overlay">
                  <span class="overlay-text">View Product</span>
                </div>
              </div>
              <div class="product-info">
                <h3 class="product-title">{product.label}</h3>
              </div>
            </a>
          ) : (
            <div class="product-link disabled">
              <div class="product-image-wrapper">
                <picture>
                  <source 
                    media="(max-width: 768px)" 
                    srcset={product.image.replace('.jpg', '-mobile.jpg')}
                  />
                  <img 
                    src={product.image} 
                    alt={product.alt}
                    loading="lazy"
                    class="product-image"
                  />
                </picture>
                {product.badge && (
                  <span class="product-badge">{product.badge}</span>
                )}
                <div class="coming-soon-overlay">
                  <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="12" cy="12" r="10"/>
                    <polyline points="12 6 12 12 16 14"/>
                  </svg>
                  <span class="overlay-text">Coming Soon</span>
                </div>
              </div>
              <div class="product-info">
                <h3 class="product-title">{product.label}</h3>
              </div>
            </div>
          )}
        </div>
      ))}
    </div>
    
    <div class="cta-section">
      <a href="#signup" class="cta-button primary">
        <span>Join The Expedition</span>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M5 12h14M12 5l7 7-7 7"/>
        </svg>
      </a>
      <p class="cta-text">Be the first to know when products launch</p>
    </div>
  </div>
</section>

<script>
  // Add intersection observer for entrance animations
  document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.classList.add('visible');
          }, index * 100);
        }
      });
    }, observerOptions);
    
    const productCards = document.querySelectorAll('.product-card');
    productCards.forEach(card => {
      observer.observe(card);
    });
  });
</script>