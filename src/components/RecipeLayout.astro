---
// src/components/RecipeLayout.astro
import type { Recipe, Ingredient } from '../pages/serves/recipe-data'; // <-- UPDATED IMPORT
const { recipe } = Astro.props;
---

<article class="recipe-page">
  <header class="recipe-hero">
    <div class="hero-image">
      <picture>
        <source 
          media="(max-width: 768px)" 
          srcset={recipe.image.replace('.jpg', '-mobile.jpg')}
        />
        <img 
          src={recipe.image} 
          alt={recipe.imageAlt} 
          loading="eager"
          width="800"
          height="800"
        />
      </picture>
    </div>
    
    <div class="hero-content">
      <nav class="breadcrumb">
        <a href="/serves">Field Manual</a>
        <span>/</span>
        <span>{recipe.name}</span>
      </nav>
      
      <h1 class="recipe-name">{recipe.name}</h1>
      <p class="recipe-tagline">{recipe.tagline}</p>
      
      <div class="recipe-meta">
        <span class="meta-item">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16 14"/></svg>
          {recipe.prepTime}
        </span>
        <span class="meta-item">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M17 10H3M21 6H3M21 14H3M17 18H3"/></svg>
          {recipe.difficulty}
        </span>
        <span class="meta-item">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z"/></svg>
          {recipe.servings}
        </span>
      </div>
    </div>
  </header>

  <main class="recipe-content">
    <div class="recipe-grid">
      <aside class="ingredients-section">
        <h2>Ingredients</h2>
        <p class="spirit-callout">
          Made with <strong>{recipe.spirit}</strong>
        </p>
        <ul class="ingredients-list">
          {/* --- TYPE ADDED BELOW --- */}
          {recipe.ingredients.map((ingredient: Ingredient) => (
            <li>
              <span class="amount">{ingredient.amount}</span>
              <span class="item">{ingredient.item}</span>
              {ingredient.note && <span class="note">({ingredient.note})</span>}
            </li>
          ))}
        </ul>
        
        <div class="glassware">
          <h3>Glassware</h3>
          <p>{recipe.glassware}</p>
        </div>
        
        {recipe.garnish && (
          <div class="garnish">
            <h3>Garnish</h3>
            <p>{recipe.garnish}</p>
          </div>
        )}
      </aside>

      <section class="instructions-section">
        <h2>Method</h2>
        <ol class="instructions-list">
          {/* --- TYPES ADDED BELOW --- */}
          {recipe.instructions.map((step: string, index: number) => (
            <li>
              <span class="step-number">{index + 1}</span>
              <p class="step-text">{step}</p>
            </li>
          ))}
        </ol>
        
        {recipe.tips && recipe.tips.length > 0 && (
          <div class="tips-section">
            <h3>Pro Tips</h3>
            <ul class="tips-list">
              {/* --- TYPE ADDED BELOW --- */}
              {recipe.tips.map((tip: string) => <li>{tip}</li>)}
            </ul>
          </div>
        )}
      </section>
    </div>
  </main>

  <footer class="recipe-footer">
    <div class="navigation">
      <a href="/serves" class="back-link">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M19 12H5M12 19l-7-7 7-7"/></svg>
        Back to Field Manual
      </a>
    </div>
  </footer>
</article>
