---
// src/components/Hero.astro
---

<section class="hero" id="hero">
  <!-- Background image container -->
  <div class="hero-background" aria-hidden="true">
    <picture>
      <source 
        media="(max-width: 768px)" 
        srcset="/hero-background-mobile.jpg"
      >
      <source 
        media="(min-width: 769px)" 
        srcset="/hero-background.jpg"
      >
      <img 
        src="/hero-background.jpg" 
        alt=""
        loading="eager"
        class="hero-bg-image"
      >
    </picture>
    <div class="hero-overlay"></div>
  </div>
  
  <!-- Hero content -->
  <div class="hero-content">
    <h1 class="headline">
      <span class="headline-line">SWIFT AND SURE.</span>
      <span class="headline-line">A SPIRIT FORGED FROM A SIGNALS LEGACY.</span>
    </h1>
    <p class="tagline">The essential spirit for any expedition. Crafted with the precision of a military communicator and the soul of an explorer. Engineered in the UK.</p>
    <a href="#signup" class="cta-button" aria-label="Become an Insider - Sign up for updates">
      <span>Become an Insider</span>
      <svg class="button-arrow" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M5 12h14M12 5l7 7-7 7"/>
      </svg>
    </a>
  </div>
  
  <!-- Scroll indicator -->
  <div class="scroll-indicator" role="presentation">
    <span class="arrow" aria-hidden="true">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M12 5v14M5 12l7 7 7-7"/>
      </svg>
    </span>
    <span class="scroll-text">Scroll</span>
  </div>
</section>

<script>
  // Smooth scroll when clicking the scroll indicator
  document.addEventListener('DOMContentLoaded', () => {
    const scrollIndicator = document.querySelector('.scroll-indicator');
    
    if (scrollIndicator) {
      scrollIndicator.addEventListener('click', () => {
        const heroHeight = document.getElementById('hero')?.offsetHeight || window.innerHeight;
        window.scrollTo({
          top: heroHeight,
          behavior: 'smooth'
        });
      });
    }
    
    // Parallax effect on scroll (optional)
    const hero = document.getElementById('hero');
    const heroBackground = document.querySelector('.hero-bg-image') as HTMLElement;
    
    if (hero && heroBackground) {
      let ticking = false;
      
      function updateParallax() {
        const scrolled = window.pageYOffset;
        const speed = 0.5; // Adjust speed of parallax
        
        if (hero && scrolled < hero.offsetHeight) {
          heroBackground.style.transform = `translateY(${scrolled * speed}px)`;
        }
        
        ticking = false;
      }
      
      function requestTick() {
        if (!ticking) {
          window.requestAnimationFrame(updateParallax);
          ticking = true;
        }
      }
      
      // Check for reduced motion preference
      if (!window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        window.addEventListener('scroll', requestTick, { passive: true });
      }
    }
    
    // Hide scroll indicator when user starts scrolling
    let scrollTimeout: ReturnType<typeof setTimeout>;
    const hideScrollIndicator = () => {
      const indicator = document.querySelector('.scroll-indicator') as HTMLElement;
      if (indicator && window.pageYOffset > 50) {
        indicator.style.opacity = '0';
        indicator.style.pointerEvents = 'none';
      }
    };
    
    window.addEventListener('scroll', () => {
      clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(hideScrollIndicator, 100);
    }, { passive: true });
  });
</script>